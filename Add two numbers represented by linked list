class Solution{
    //Function to add two numbers represented by linked list.
    static Node addTwoLists(Node first, Node second){
        // code here
        // return head of sum list
        
        int carry = 0;
        Node ansHead = null;
        
        first = reverse(first);
        second = reverse(second);
        
        while(first != null || second != null || carry != 0)
        {
            int val1 = 0, val2 = 0;
            if(first != null)
            {
                val1 = first.data;
            }
            if(second != null)
            {
                val2 = second.data;
            }
            
            int sum = val1 + val2 + carry;
            
            int digit = sum % 10;
            ansHead = insertAtTail(ansHead, digit);
            
            carry = sum/10;
            
            if(first != null)
            {
                first = first.next;
            }
            if(second != null)
            {
                second = second.next;
            }
        }
        
        if(ansHead != null)
        {
            ansHead = reverse(ansHead);
            return ansHead;
        }
        
        return ansHead;
    }
    
    public static Node insertAtTail(Node head, int d)
    {
        Node node = new Node(d);
        if(head == null)
        {
            head = node;
            return head;
        }
        
        Node temp = head;
        while(temp.next != null)
        {
            temp = temp.next;
        }
        
        temp.next = node;
        return head;
    }
    
    
    public static Node reverse(Node head)
    {
        Node prev = null;
        Node curr = head;
        
        while(curr != null)
        {
            Node forw = curr.next;
            curr.next = prev;
            prev = curr;
            curr = forw;
        }
        return prev;
    }
}
